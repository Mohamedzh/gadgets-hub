generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id          String   @id @default(uuid())
  name        String   @unique
  phonesNum   Int
  gsmArenaUrl String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  phones      Phone[]
  Reviews     Review[]
}

model Phone {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  imgUrl          String
  url             String
  brandName       String
  year            Int
  description     String
  brand           Brand             @relation(fields: [brandName], references: [name])
  PhoneSpecs      PhoneSpecs[]
  PhoneQuickSpecs PhoneQuickSpecs[]
  USDPrice        USDPrice?
  GBPPrice        GBPPrice?
  EURPrice        EURPrice?
  IndianPrice     IndianPrice?
  EGPPrice        EGPPrice?
}

model Spec {
  id           String       @id @default(uuid())
  name         String
  categoryName String
  alias        String       @unique
  category     Category     @relation(fields: [categoryName], references: [name])
  PhoneSpecs   PhoneSpecs[]

  @@unique(fields: [alias, categoryName], name: "detailedSpec")
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  specs Spec[]
}

model PhoneSpecs {
  id        Int    @id @default(autoincrement())
  phoneId   Int
  specAlias String
  value     String
  phone     Phone  @relation(fields: [phoneId], references: [id])
  spec      Spec   @relation(fields: [specAlias], references: [alias])

  @@unique([phoneId, specAlias])
}

model QuickSpec {
  id              String            @id @default(uuid())
  name            String            @unique
  PhoneQuickSpecs PhoneQuickSpecs[]
}

model PhoneQuickSpecs {
  id            Int       @id @default(autoincrement())
  phoneId       Int
  quickspecName String
  value         String
  phone         Phone     @relation(fields: [phoneId], references: [id])
  spec          QuickSpec @relation(fields: [quickspecName], references: [name])

  @@unique([phoneId, quickspecName])
}

model USDPrice {
  id      Int   @id @default(autoincrement())
  phoneId Int   @unique
  value   Int
  phone   Phone @relation(fields: [phoneId], references: [id])
}

model GBPPrice {
  id      Int   @id @default(autoincrement())
  phoneId Int   @unique
  value   Int
  phone   Phone @relation(fields: [phoneId], references: [id])
}

model EURPrice {
  id      Int   @id @default(autoincrement())
  phoneId Int   @unique
  value   Int
  phone   Phone @relation(fields: [phoneId], references: [id])
}

model IndianPrice {
  id      Int   @id @default(autoincrement())
  phoneId Int   @unique
  value   Int
  phone   Phone @relation(fields: [phoneId], references: [id])
}

model EGPPrice {
  id      Int   @id @default(autoincrement())
  phoneId Int   @unique
  value   Int
  phone   Phone @relation(fields: [phoneId], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  imgUrl     String
  link       String
  reviewDate String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  brandName  String?
  brand      Brand?   @relation(fields: [brandName], references: [name])
}

model User {
  id       String  @id
  name     String
  nickName String  @unique
  email    String  @unique
}
